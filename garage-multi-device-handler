/**
 *  Garage Multi
 *
 *  Author: Wesley Bornor
 *  Date: 2014-04-13
 */
 // for the UI
metadata {
	definition (name: "Garage Multi", author: "Wesley Bornor") {
		capability "Switch"
		capability "Momentary"
		capability "Switch Level"
		capability "Relay Switch"
	}

	simulator {
		// TODO: define status and reply messages here
	}

	tiles {
		standardTile("rightDoor", "device.rightDoor", width: 2, height: 2, canChangeIcon: true) {
			state "waiting", label: 'Chrissie', action: "push", icon:"st.doors.garage.garage-closed", backgroundColor: "#FFFFFF", nextState: "pushed"
			state "pushed", label: 'Chrissie', action: "push", icon: "st.doors.garage.garage-closed", backgroundColor: "#ffa81e", nextState: "waiting"
		}
        
		main "rightDoor"
		details "rightDoor"
	}
}

def parse(String description) {

	def name = null
	def value = zigbee.parse(description)?.text
	log.debug "Value is ${value}"
	def linkText = getLinkText(device)
	def descriptionText = getDescriptionText(description, linkText, value)
	def handlerName = value
	def isStateChange = value != "ping"
	def displayed = value && isStateChange
    
	def incoming_cmd = value.split()
    
	name = incoming_cmd[0]	
	value = incoming_cmd[1]
    
    	def result = [
		value: value,
        	name: value != "ping" ? name : null,
		handlerName: handlerName,
		linkText: linkText,
		descriptionText: descriptionText,
		isStateChange: isStateChange,
		displayed: displayed
    	]
    	log.debug result
	return result
}


// handle commands
def on() {
	log.debug "Executing 'on'"
	// TODO: handle 'on' command
}

def off() {
	log.debug "Executing 'off'"
	// TODO: handle 'off' command
}

def push() {
	log.debug "Executing 'push'"
        zigbee.smartShield(text: "pushRight").format()
}

def setLevel() {
	log.debug "Executing 'setLevel'"
	// TODO: handle 'setLevel' command
}



